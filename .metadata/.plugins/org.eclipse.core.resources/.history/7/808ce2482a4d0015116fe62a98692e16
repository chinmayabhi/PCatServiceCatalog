package pcatalog;

import java.sql.Connection;
import java.sql.ResultSet;

import javax.json.Json;
import javax.json.JsonArrayBuilder;
import javax.json.JsonObjectBuilder;
import javax.ws.rs.DefaultValue;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import com.google.gson.GsonBuilder;

@Path("/CostSender")
public class PCatBilling {
   @GET
   @Produces(MediaType.TEXT_PLAIN)
   public double sendProfile(@DefaultValue("null")@QueryParam("id") String id){
    	
    	ConnectionGetter getConnection = new ConnectionGetter();
 	   	Connection con = getConnection.getConnection();
 	   	java.sql.Statement st = con.createStatement();
 	   	JsonObjectBuilder productDetails = Json.createObjectBuilder();
 	   	JsonArrayBuilder list = Json.createArrayBuilder();
 	   	JsonObjectBuilder x1;
 	   	ResultSet rSet;
 	   	
    	if(id.contains("b")) {
    		
    		 rSet = st.executeQuery("select t1.cost*t2.discount from"
    				 + "(select sum(cost) as cost from products join bundle_products "
    				 + "on (products.product_id = bundle_products.product_id)"
    				 + "where bundle_type_cd = 'b2001' group by bundle_type_cd) t1,"
    				 + "(select (1-(discount_id/100)) as discount from discount join bundle_types" 
    				 + "on (bundle_types.bundle_type = discount.product_type)"
    				 + "where bundle_type_cd = 'b2001') t2");
    	}
    	
    	else {
    		
    		rSet = st.executeQuery("select p.product_id, (p.cost*(1-(d.discount_id/100)))as cost"
    				+ "from products p join discount d on p.product_type_value = d.Product_type"
    				+ "where p.product_id = 'p1005'");
    	}
    	rSet.next();
    	con.close();
		return cost;
   }	

   /*public static void main(String args[])
   {
	   //AccountsJsonStringSender fr=new AccountsJsonStringSender();
	   //System.out.println(fr.sendProfile());
	   String id = "b2000";
	   if(id.contains("p"))
		   System.out.println("qq");
   }*/
}